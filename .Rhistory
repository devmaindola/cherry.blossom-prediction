print(list[[0]])
x <- c(2022, 2023, 2024, 2025, 2026, 2027,2028, 2029, 2030, 2031)
list <- c()
for (i in x)
{
df_year <- filter(df_test, Year == i)
df_first <- head(df_year,1)
list[i] <- df_first
}
x <- c(2022, 2023, 2024, 2025, 2026, 2027,2028, 2029, 2030, 2031)
list <- c()
for (i in x)
{
df_year <- filter(df_test, Year == i)
df_first <- head(df_year,1)
list[i] <- df_firstc(12)
}
x <- c(2022, 2023, 2024, 2025, 2026, 2027,2028, 2029, 2030, 2031)
list <- c()
for (i in x)
{
df_year <- filter(df_test, Year == i)
df_first <- head(df_year,1)
list[i] <- df_first[c(12)]
}
list[0]
[[1]]
print(list[[1]])
list
x <- c(2022, 2023, 2024, 2025, 2026, 2027,2028, 2029, 2030, 2031)
n <- c()
for (i in x)
{
df_year <- filter(df_test, Year == i)
df_first <- head(df_year,1)
n[i] <- df_first[c(12)]
}
n
df_first[c(12)]
x <- c(2022, 2023, 2024, 2025, 2026, 2027,2028, 2029, 2030, 2031)
n <- c()
for (i in x)
{
df_year <- filter(df_test, Year == i)
df_first <- head(df_year,1)
n[i] <- df_first[c(12)][,1]
}
n
df_first[c(12)][,1]
n <- c()
for (i in x)
{
df_year <- filter(df_test, Year == i)
df_first <- head(df_year,1)
n[i] <- df_first[c(12)][0]
}
n
df_first[c(12)][0]
df_first[c(12)]
df_first[c(12)]['days']
df_first[c(12)]
df_first[c(12)][1]
df_first[c(12)][1,1]
df_first[c(12)][,0]
n <- c()
for (i in x)
{
df_year <- filter(df_test, Year == i)
df_first <- head(df_year,1)
n[i] <- df_first[c(12)][,0]
}
N
n
df_first[c(12)].value
test_x
df_35 <- filter(df_test,ï..Day_of_the_year==1 & Latitude==35.012)
df_35
df_other <- filter(df_test,ï..Day_of_the_year==1 & Latitude!=35.012)
df_other <- filter(df_test,ï..Day_of_the_year==tail(df_test,1) & Latitude!=35.012)
df_other <- filter(df_test,ï..Day_of_the_year >= 50 & Latitude!=35.012)
df_other
df_other <- filter(df_test,ï..Day_of_the_year >= 55 & Latitude!=35.012)
df_other
df_other <- filter(df_test,ï..Day_of_the_year >= 50 & Latitude!=35.012)
df_other
df_grp_reg_cat = df_test %>% group_by(Year)
df_grp_reg_cat
head(df_test,3)
df_other <- filter(df_test,ï..Day_of_the_year == 53 & Latitude!=35.012)
df_other
round(df_35,0)
round(df_35$days,0)
class(days)
class(df_35$days)
round(df_other,digits=0)
select(df_other, Latitude,Longitude,days)
df_other
select(df_other, Latitude,Longitude,    days)
select(df_other, Latitude,Longitude)
colnames(df_other)
select(df_other, Latitude,Longitude,d3)
colnames(days) <- c('d3')
select(df_other, Latitude,Longitude,d3)
select(df_other, Latitude,Longitude,Year,d3)
df_other$d3 <- strtoi(df_other$d3)
round(df_other$d3,0)
round(df_other$d3,2)
df_other
pred1 <- predict(m_xgb_untuned,test_x)
d3 <- as.data.frame(pred1)
colnames(d3) <- c('days')
df_test$d3 <- d3
head(df_test,2)
df_35 <- filter(df_test,ï..Day_of_the_year==1 & Latitude==35.012)
df_35
df_other <- filter(df_test,ï..Day_of_the_year == 53 & Latitude!=35.012)
colnames(df_other)
round(df_other$d3,digits=0)
df_other$d3=round(df_other$d3,digits=0)
df_35$d3=round(df_35$d3,digits=0)
df_other$d3=round(df_other$d3,digits=0)
df_final =select(df_other, Latitude,Longitude,Year,d3)
df_final
df_final <- transform(
df_final, Peak Bloom Day= d3 + 53 )
df_final <- transform(
df_final, PeakBloomDayno= d3 + 53 )
df_final
df_final$PeakBloomDayno <- transform(
df_final, PeakBloomDayno= d3 + 53 )
df_final
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE,
message = FALSE,
fig.align = 'center',
out.width = '80%')
library(tidyverse)
library(xgboost)
library(caret)
library(lattice)
library(data.table)
df <- read.csv("data/cherryblossomfeaturedata.csv")
head(df,5)
df_valid <- filter(df, Year == 2021)
X_valid <- df_valid[ -c(6,7,8,10,11)]
Y_valid <- df_valid[ c(11)]
df_train <- filter(df, Year < 2021)
X_train <- df_train[-c(6,7,8,10,11)]
Y_train <- df_train[ c(11)]
df_test <- filter(df, Year > 2021)
X_test <- df_test[-c(6,7,8,10,11)]
Y_test <- df_test[ c(11)]
train_x <- data.matrix(X_train)
valid_x <- data.matrix(X_valid)
test_x <- data.matrix(X_test)
xgb_train <- xgb.DMatrix(data = train_x, label = Y_train[,1])
xgb_valid <- xgb.DMatrix(data = valid_x, label = Y_valid[,1])
xgb_test <- xgb.DMatrix(data = test_x, label = Y_test[,1])
## Predicting the peak bloom
# Fit simple least-squares lines for all sites.
m_xgb_untuned <- xgboost(
data = xgb_train,
#n_estimators=1000,
reg_lambda=1,
gamma=1,
max_depth=10,
min_child_weight=4,
learning_rate=0.05,
nrounds = 1000,
#reg_lambda=1,
#gamma=1,
objective = "reg:squarederror"
#min_child_weight=4,
#nfold = 5
#max_depth = 20,
#eta = 0.2
)
# predict values in test set
pred <- predict(m_xgb_untuned,valid_x)
pred[1]
pred[117]
pred[176]
pred[235]
pred1 <- predict(m_xgb_untuned,test_x)
d3 <- as.data.frame(pred1)
colnames(d3) <- c('days')
df_test$d3 <- d3
head(df_test,2)
df_35 <- filter(df_test,ï..Day_of_the_year==1 & Latitude==35.012)
df_35
df_other <- filter(df_test,ï..Day_of_the_year == 53 & Latitude!=35.012)
df_35$d3=round(df_35$d3,digits=0)
df_other$d3=round(df_other$d3,digits=0)
df_final =select(df_other, Latitude,Longitude,Year,d3)
df_final$PeakBloomDayno <- transform(
df_final, PeakBloomDayno= d3 + 53 )
df_final
df_final <- transform(
df_final, PeakBloomDayno= d3 + 53 )
df_final
colnames(df_final)
df_35 =select(df_35, Latitude,Longitude,Year,d3)
df_other =select(df_other, Latitude,Longitude,Year,d3)
df_other =select(df_other, Latitude,Longitude,Year,d3)
df_35 <- transform(
df_35, PeakBloomDayno= d3 + 53 )
df_other <- transform(
df_other, PeakBloomDayno= d3 + 53 )
df_other
df_35
rbind(df_35,df_other)
df_35 =select(df_35, Latitude,Longitude,Year,d3)
df_other =select(df_other, Latitude,Longitude,Year,d3)
df_other <- transform(
df_other, PeakBloomDayno= d3 + 53 )
rbind(df_35,df_other)
df_35 =select(df_35, Latitude,Longitude,Year,d3)
df_other =select(df_other, Latitude,Longitude,Year,d3)
df_35 <- transform(
df_35, PeakBloomDayno= d3)
df_other <- transform(
df_other, PeakBloomDayno= d3 + 53 )
rbind(df_35,df_other)
df_final <- df_final[-c(4)
df_final
df_final <- df_final[-c(4)]
df_final
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE,
message = FALSE,
fig.align = 'center',
out.width = '80%')
library(tidyverse)
library(xgboost)
library(caret)
library(lattice)
library(data.table)
df <- read.csv("data/cherryblossomfeaturedata.csv")
head(df,5)
df_valid <- filter(df, Year == 2021)
X_valid <- df_valid[ -c(6,7,8,10,11)]
Y_valid <- df_valid[ c(11)]
df_train <- filter(df, Year < 2021)
X_train <- df_train[-c(6,7,8,10,11)]
Y_train <- df_train[ c(11)]
df_test <- filter(df, Year > 2021)
X_test <- df_test[-c(6,7,8,10,11)]
Y_test <- df_test[ c(11)]
train_x <- data.matrix(X_train)
valid_x <- data.matrix(X_valid)
test_x <- data.matrix(X_test)
xgb_train <- xgb.DMatrix(data = train_x, label = Y_train[,1])
xgb_valid <- xgb.DMatrix(data = valid_x, label = Y_valid[,1])
xgb_test <- xgb.DMatrix(data = test_x, label = Y_test[,1])
## Predicting the peak bloom
# Fit simple least-squares lines for all sites.
m_xgb_untuned <- xgboost(
data = xgb_train,
#n_estimators=1000,
reg_lambda=1,
gamma=1,
max_depth=10,
min_child_weight=4,
learning_rate=0.05,
nrounds = 1000,
#reg_lambda=1,
#gamma=1,
objective = "reg:squarederror"
#min_child_weight=4,
#nfold = 5
#max_depth = 20,
#eta = 0.2
)
# predict values in test set
pred <- predict(m_xgb_untuned,valid_x)
pred[1]
pred[117]
pred[176]
pred[235]
pred1 <- predict(m_xgb_untuned,test_x)
d3 <- as.data.frame(pred1)
colnames(d3) <- c('days')
df_test$d3 <- d3
head(df_test,2)
df_35 <- filter(df_test,ï..Day_of_the_year==1 & Latitude==35.012)
df_35
df_other <- filter(df_test,ï..Day_of_the_year == 53 & Latitude!=35.012)
df_35$d3=round(df_35$d3,digits=0)
df_other$d3=round(df_other$d3,digits=0)
df_35 =select(df_35, Latitude,Longitude,Year,d3)
df_other =select(df_other, Latitude,Longitude,Year,d3)
df_35 <- transform(
df_35, PeakBloomDayno= d3)
df_other <- transform(
df_other, PeakBloomDayno= d3 + 53 )
df_final <- rbind(df_35,df_other)
df_final <- df_final[-c(4)]
df_final
df_final.T
transpose(df_final)
df_t <- transpose(df_final)
colnames(df_t) <- rownames(df_t)
rownames(df_t) <- colnames(df_t)
library(data.table)
colnames(df_t) <- rownames(df_t)
rownames(df_t) <- colnames(df_t)
df_final
df_kyoto <- filter(df_final, Latitude == 35.012)
df_liestal <- filter(df_final, Latitude == 38.8853)
df_washington dc <- filter(df_final, Latitude == 47.4814)
df_vancouver <- filter(df_final, Latitude == 49.2237)
df_kyoto <- filter(df_final, Latitude == 35.012)
df_liestal <- filter(df_final, Latitude == 38.8853)
df_washingtondc <- filter(df_final, Latitude == 47.4814)
df_vancouver <- filter(df_final, Latitude == 49.2237)
df_kyoto <- filter(df_final, Latitude == 35.012)
df_liestal <- filter(df_final, Latitude == 38.8853)
df_washington <- filter(df_final, Latitude == 47.4814)
df_vancouver <- filter(df_final, Latitude == 49.2237)
df_washington
df_kyoto$df_liestal <- df_liestal
df_kyoto
df_kyoto
df_kyoto$washington <- washington
df_kyoto$df_washington <- df_washington
df_washington <- filter(df_final, Latitude == 47.4814)
df_washington
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE,
message = FALSE,
fig.align = 'center',
out.width = '80%')
library(tidyverse)
library(xgboost)
library(caret)
library(lattice)
library(data.table)
df <- read.csv("data/cherryblossomfeaturedata.csv")
head(df,5)
df_valid <- filter(df, Year == 2021)
X_valid <- df_valid[ -c(6,7,8,10,11)]
Y_valid <- df_valid[ c(11)]
df_train <- filter(df, Year < 2021)
X_train <- df_train[-c(6,7,8,10,11)]
Y_train <- df_train[ c(11)]
df_test <- filter(df, Year > 2021)
X_test <- df_test[-c(6,7,8,10,11)]
Y_test <- df_test[ c(11)]
train_x <- data.matrix(X_train)
valid_x <- data.matrix(X_valid)
test_x <- data.matrix(X_test)
xgb_train <- xgb.DMatrix(data = train_x, label = Y_train[,1])
xgb_valid <- xgb.DMatrix(data = valid_x, label = Y_valid[,1])
xgb_test <- xgb.DMatrix(data = test_x, label = Y_test[,1])
## Predicting the peak bloom
# Fit simple least-squares lines for all sites.
m_xgb_untuned <- xgboost(
data = xgb_train,
#n_estimators=1000,
reg_lambda=1,
gamma=1,
max_depth=10,
min_child_weight=4,
learning_rate=0.05,
nrounds = 1000,
#reg_lambda=1,
#gamma=1,
objective = "reg:squarederror"
#min_child_weight=4,
#nfold = 5
#max_depth = 20,
#eta = 0.2
)
# predict values in test set
pred <- predict(m_xgb_untuned,valid_x)
pred[1]
pred[117]
pred[176]
pred[235]
pred1 <- predict(m_xgb_untuned,test_x)
d3 <- as.data.frame(pred1)
colnames(d3) <- c('days')
df_test$d3 <- d3
head(df_test,2)
df_35 <- filter(df_test,ï..Day_of_the_year==1 & Latitude==35.012)
df_35
df_other <- filter(df_test,ï..Day_of_the_year == 53 & Latitude!=35.012)
df_35$d3=round(df_35$d3,digits=0)
df_other$d3=round(df_other$d3,digits=0)
df_35 =select(df_35, Latitude,Longitude,Year,d3)
df_other =select(df_other, Latitude,Longitude,Year,d3)
df_35 <- transform(
df_35, PeakBloomDayno= d3)
df_other <- transform(
df_other, PeakBloomDayno= d3 + 53 )
df_final <- rbind(df_35,df_other)
df_final <- df_final[-c(4)]
df_kyoto <- filter(df_final, Latitude == 35.012)
df_liestal <- filter(df_final, Latitude == 38.8853)
df_washington <- filter(df_final, Latitude == 47.4814)
df_vancouver <- filter(df_final, Latitude == 49.2237)
df_kyoto$df_liestal <- df_liestal
df_kyoto$df_washington <- df_washington
df_other
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE,
message = FALSE,
fig.align = 'center',
out.width = '80%')
library(tidyverse)
library(xgboost)
library(caret)
library(lattice)
library(data.table)
df <- read.csv("data/cherryblossomfeaturedata.csv")
head(df,5)
df_valid <- filter(df, Year == 2021)
X_valid <- df_valid[ -c(6,7,8,10,11)]
Y_valid <- df_valid[ c(11)]
df_train <- filter(df, Year < 2021)
X_train <- df_train[-c(6,7,8,10,11)]
Y_train <- df_train[ c(11)]
df_test <- filter(df, Year > 2021)
X_test <- df_test[-c(6,7,8,10,11)]
Y_test <- df_test[ c(11)]
train_x <- data.matrix(X_train)
valid_x <- data.matrix(X_valid)
test_x <- data.matrix(X_test)
xgb_train <- xgb.DMatrix(data = train_x, label = Y_train[,1])
xgb_valid <- xgb.DMatrix(data = valid_x, label = Y_valid[,1])
xgb_test <- xgb.DMatrix(data = test_x, label = Y_test[,1])
## Predicting the peak bloom
# Fit simple least-squares lines for all sites.
m_xgb_untuned <- xgboost(
data = xgb_train,
#n_estimators=1000,
reg_lambda=1,
gamma=1,
max_depth=10,
min_child_weight=4,
learning_rate=0.05,
nrounds = 1000,
#reg_lambda=1,
#gamma=1,
objective = "reg:squarederror"
#min_child_weight=4,
#nfold = 5
#max_depth = 20,
#eta = 0.2
)
# predict values in test set
pred <- predict(m_xgb_untuned,valid_x)
pred[1]
pred[117]
pred[176]
pred[235]
pred1 <- predict(m_xgb_untuned,test_x)
d3 <- as.data.frame(pred1)
colnames(d3) <- c('days')
df_test$d3 <- d3
head(df_test,2)
df_35 <- filter(df_test,ï..Day_of_the_year==1 & Latitude==35.012)
df_35
df_other <- filter(df_test,ï..Day_of_the_year == 53 & Latitude!=35.012)
df_35$d3=round(df_35$d3,digits=0)
df_other$d3=round(df_other$d3,digits=0)
df_35 =select(df_35, Latitude,Longitude,Year,d3)
df_other =select(df_other, Latitude,Longitude,Year,d3)
df_35 <- transform(
df_35, PeakBloomDayno= d3)
df_other <- transform(
df_other, PeakBloomDayno= d3 + 53 )
df_other
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE,
message = FALSE,
fig.align = 'center',
out.width = '80%')
library(tidyverse)
library(xgboost)
library(caret)
library(lattice)
library(data.table)
df <- read.csv("data/cherryblossomfeaturedata.csv")
df <- read.csv("data/cherryblossomfeaturedata.csv")
library(tidyverse)
library(xgboost)
library(caret)
library(lattice)
library(data.table)
df <- read.csv("data/cherryblossomfeaturedata.csv")
df <- read.csv("data/cherryblossomfeaturedata.csv")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE,
message = FALSE,
fig.align = 'center',
out.width = '80%')
library(tidyverse)
library(xgboost)
library(caret)
library(lattice)
library(data.table)
df <- read.csv("data/cherryblossomfeaturedata.csv")
df <- read.csv("data/cherryblossomfeaturedata.csv")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, error = FALSE,
message = FALSE,
fig.align = 'center',
out.width = '80%')
library(tidyverse)
library(xgboost)
library(caret)
library(lattice)
library(data.table)
df <- read.csv("data/cherryblossomfeaturedata.csv")
df <- read.csv("data/cherryblossomfeaturedata.csv")
df <- read.csv("data/cherryblossomfeaturedata.csv")
df <- read.csv("C:/Users/Devendra Temp/Downloads/peak-bloom-prediction-main/peak-bloom-prediction-main/data.csv")
df <- read.csv("C:/Users/DevendraTemp/Downloads/peak-bloom-prediction-main/peak-bloom-prediction-main/data/cherryblossomfeaturedata.csv")
